@import './base.scss';

$colWidth: 200px;
$colHeight: 100px;
$ballWidth: 30px;
main{
	display: flex;
	flex-direction: column;

	width: 100%;
	padding: 1rem;
	max-width: $colWidth*3;
	overflow: hidden;
	.row{
		display: flex;
		flex-direction: row;
	}
	.col{
		position: relative;
		
		width: $colWidth;
		height: $colHeight;
		border: black solid 2px;
		background: radial-gradient(circle, rgba(113,81,95,1) 81%, rgba(0,0,0,1) 100%);

		margin: 0.25rem;
		opacity: 1;
	}
	.ball{
		position: absolute;
		z-index: 100;
		top: calc(($colHeight - $ballWidth) / 2);
		left: calc(($colWidth - $ballWidth) / 2);
		width: $ballWidth;
		height: $ballWidth;
		
		border-radius: 50%;
		background-color: #A5F12B;
		opacity: 1;
	}
}

.flashing{
	animation: flashing 1s infinite;
}

.move1{
	animation: move1 4s infinite;
}

.move2{
	animation: move2 4s infinite;
}

@keyframes flashing{
    from{ opacity: 1;}
    to{ opacity: 0.6;}
}

@keyframes move1{
    from{ left: calc(($colWidth - $ballWidth) / 2);}
    to{ left: calc($colWidth*3);}
}

@keyframes move2{
    from{ transform: translate(0px, 0px);}
    to{ transform: translate($colWidth*3, 0px);}
}

// animation compoments
@mixin animation-mixin($name, $rowEnd, $colEnd) {
	@keyframes #{$name} {
		from {
			top: calc(($colHeight - $ballWidth) / 2);
			left: calc(($colWidth - $ballWidth) / 2);
		}
	  	to{ 
			top: calc(($colHeight*$colEnd) - ($ballWidth*0.25));
			left: calc(($colWidth*$rowEnd) - ($ballWidth*0.25));
		}
	}
}

@include animation-mixin(rightDown3, 3, 3);
@include animation-mixin(down3, 1, 3);
@include animation-mixin(right3, 3, 1);
@include animation-mixin(down1, 1, 1);

.rightDown3 {
	animation: rightDown3 5s;
}
.down3 {
	animation: down3 5s;
}
.right3 {
	animation: right3 5s;
}
.down1 {
	animation: down1 5s;
}